<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example.client-maven-project</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>demo</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <!--
                This plugin will generate the classes in the com.example.clientmavenproject.demo.client.soapClient package
                of src directory of the project
                and this plugin will check the generated timestamp of the classes so that
                those classes are generated only when any change in the WSDL happens.
                                -->
                <groupId>org.jvnet.jaxb2.maven2</groupId>
                <artifactId>maven-jaxb2-plugin</artifactId>
                <version>0.13.2</version>
                <executions>
                    <!--
                    Define Multiple schemas with different configuration
                    -->
                    <execution>
                        <id>xjc-schema1</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatePackage>com.example.clientmavenproject.demo.generated.aws</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java</generateDirectory>
                            <schemaDirectory>${project.basedir}/src/main/resources/wsdl</schemaDirectory>
                            <schemaIncludes>
                                <include>aws/*.wsdl</include>
                            </schemaIncludes>
                            <!--
                                Historically, the plugin supports the <forceRegenerate>true</forceRegenerate> configuration setting.
                                When set to true, this setting will force the plugin to regenerate the sources - regardless of
                                whether something was changed or not.

                                the use of <forceRegenerate>true</forceRegenerate> is strongly discouraged.
                                Consider removing this setting from your configuration (will default to false).
                                If you need a full rebuild, do mvn clean instead.
                            -->
                            <forceRegenerate>true</forceRegenerate>
                        </configuration>
                    </execution>
                    <execution>
                        <id>xjc-schema2</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generatePackage>com.example.clientmavenproject.demo.generated.math</generatePackage>
                            <generateDirectory>${project.basedir}/src/main/java</generateDirectory>
                            <schemaDirectory>${project.basedir}/src/main/resources/wsdl</schemaDirectory>
                            <schemaIncludes>
                                <include>math/*.wsdl</include>
                            </schemaIncludes>
                            <!--
                                Historically, the plugin supports the <forceRegenerate>true</forceRegenerate> configuration setting.
                                When set to true, this setting will force the plugin to regenerate the sources - regardless of
                                whether something was changed or not.

                                the use of <forceRegenerate>true</forceRegenerate> is strongly discouraged.
                                Consider removing this setting from your configuration (will default to false).
                                If you need a full rebuild, do mvn clean instead.
                            -->
                            <forceRegenerate>true</forceRegenerate>
                        </configuration>
                    </execution>
                </executions>

                <!--
                If there is no need to Define Multiple schemas with different configuration,
                Then we can define a global configuration here
                -->

                <!--<configuration>
                    <generatePackage>com.example.clientmavenproject.demo.aws.generated</generatePackage>
                    <generateDirectory>${project.basedir}/src/main/java</generateDirectory>
                    <schemaDirectory>${project.basedir}/src/main/resources/wsdl</schemaDirectory>
                    <schemaIncludes>
                        <include>*.wsdl</include>
                    </schemaIncludes>
                </configuration>-->
            </plugin>
        </plugins>
    </build>


</project>
